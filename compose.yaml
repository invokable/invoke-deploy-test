services:
  app:
    build:
      context: .
      dockerfile: docker/production/Dockerfile
    restart: unless-stopped
    environment:
      - CONTAINER_ROLE=app
      - VIRTUAL_HOST=example.com
      - VIRTUAL_PORT=8000
    expose:
      - "8000"
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - app-network
      - nginx-proxy
    depends_on:
      - redis

  queue:
    build:
      context: .
      dockerfile: docker/production/Dockerfile
    restart: unless-stopped
    environment:
      - CONTAINER_ROLE=queue
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - app-network
    depends_on:
      - redis

  scheduler:
    build:
      context: .
      dockerfile: docker/production/Dockerfile
    restart: unless-stopped
    environment:
      - CONTAINER_ROLE=scheduler
    volumes:
      - .:/var/www/html
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - app-network
    depends_on:
      - redis

  redis:
    image: redis:8-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - app-network
    command: redis-server --appendonly yes

  node:
    image: node:24-alpine
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    profiles:
      - build

networks:
  app-network:
    driver: bridge
  nginx-proxy:
    external: true

volumes:
  redis-data:
    driver: local
